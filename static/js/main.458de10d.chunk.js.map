{"version":3,"sources":["reducers/map.js","reducers/settings.js","reducers/textureMap.js","reducers/application.js","reducers/index.js","reducers/texture.js","presenters/Settings.jsx","containers/SettingsContainer.jsx","actions/index.js","core/image.js","presenters/FileLoader.jsx","containers/TextureLoadContainer.jsx","presenters/Grid.jsx","core/utils.js","presenters/Texture/TextureGrid.jsx","selectors/index.js","containers/TextureGridContainer.jsx","presenters/Texture/TextureSelect.jsx","containers/TextureSelectContainer.jsx","core/map.js","containers/MapLoadContainer.jsx","presenters/Map/Tile.jsx","presenters/Map/MapGrid.jsx","containers/MapGridContainer.jsx","presenters/Map/MapSelect.jsx","containers/MapSelectContainer.jsx","presenters/TextureMap.jsx","containers/TextureMapContainer.jsx","App.js","index.js"],"names":["initialState","width","height","tilesWide","tilesHigh","scale","textureLoaded","mapLoaded","roguelikeApp","combineReducers","application","state","action","type","Object","assign","map","settings","value","image","textureMap","newStyle","key","style","texture","Settings","handleChange","htmlFor","id","min","max","onChange","val","step","precision","connect","ownProps","dispatch","event","setScale","setTilesHigh","setTilesWide","getImage","dataUri","Promise","resolve","reject","test","img","Image","onload","src","FileLoader","dropHandler","text","onDrop","bind","getRootProps","getInputProps","border","margin","padding","files","file","reader","FileReader","target","result","then","name","catch","reason","readAsDataURL","loadImageFile","loadTexture","alert","Grid","components","rows","curRow","y","length","x","push","range","size","Array","fill","isArray","obj","prototype","toString","call","TextureGrid","props","images","imageWidth","imageHeight","promises","row","all","col","canvas","document","createElement","context","getContext","drawImage","toDataURL","cropImage","croppedImage","setState","ev","dataTransfer","setData","JSON","stringify","nextProps","this","generateImages","tileWidth","tileHeight","imageRow","onDragStart","handleDrag","alt","Component","getSizes","createSelector","Math","floor","TextureSelect","loadMapFile","msg","parse","e","Error","parseJson","data","message","readAsText","overlay","textureOverlay","loadMap","Tile","pointerEvents","fontSize","role","Map","handleDrop","getData","applyStyle","tileComponents","tiles","idx","tile","tdx","onDragOver","preventDefault","onDragEnter","onDragLeave","minWidth","minHeight","className","MapGrid","MapSelect","MapGridContainer","MapLoadContainer","TextureMap","overflowWrap","language","docco","App","MapSelectContainer","TextureSelectContainer","TextureMapContainer","SettingsContainer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.458de10d.chunk.js","sourcesContent":["const initialState = [\n  []\n];\n\nexport const map = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_MAP':\n      return action.map;\n    default:\n      return state\n  }\n}","const initialState = {\n  width: 64,\n  height: 64,\n  tilesWide: 4,\n  tilesHigh: 4,\n  scale: 2,\n}\n\nexport const settings = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_TILES_WIDE':\n      return Object.assign(\n        {}, state, { \n          tilesWide: action.value \n        }\n      );\n    case 'SET_TILES_HIGH':\n      return Object.assign(\n        {}, state, { tilesHigh: action.value }\n      );\n    case 'SET_SCALE':\n      return Object.assign(\n        {}, state, { scale: action.value }\n      );\n    case 'LOAD_TEXTURE':\n      const {width, height} = action.image\n      return Object.assign(\n        {}, state, { \n          width,\n          height\n         }\n      );\n    default:\n      return state\n  }\n}","const initialState = {}\n\nexport const textureMap = (state = initialState, action) => {\n  switch (action.type) {\n    case 'APPLY_STYLE':\n      const newStyle = {};\n      newStyle[action.key] = action.style;\n      return Object.assign(\n        {}, state, newStyle\n      );\n    case 'SET_TILES_WIDE':\n      return initialState;\n    case 'SET_TILES_HIGH':\n      return initialState;\n    default:\n      return state\n  }\n}","const initialState = {\n  textureLoaded: false,\n  mapLoaded: false,\n}\nexport const application = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOAD_TEXTURE':\n      return Object.assign(\n        {}, state, { textureLoaded: true }\n      );\n    case 'LOAD_MAP':\n      return Object.assign(\n        {}, state, { mapLoaded: true }\n      );\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { map } from './map.js';\nimport { texture } from './texture.js';\nimport { settings } from './settings.js';\nimport { textureMap } from './textureMap.js';\nimport { application } from './application.js';\n\nconst roguelikeApp = combineReducers({\n  application,\n  map,\n  settings,\n  textureMap,\n  texture,\n});\n\nexport default roguelikeApp;","export const texture = (state = {}, action) => {\n  switch (action.type) {\n    case 'LOAD_TEXTURE':\n      return action.image;\n    default:\n      return state\n  }\n}","import React from \"react\";\nimport NumericInput from \"react-numeric-input\";\n\nexport const Settings = ({ handleChange, tilesWide, tilesHigh, scale }) => (\n  <div>\n    <div>\n      <label htmlFor=\"tilesWide\">Tiles Wide </label>\n      <br />\n      <NumericInput\n        id=\"tilesWide\"\n        value={tilesWide}\n        min={1}\n        max={32}\n        onChange={val => {\n          handleChange(\"tilesWide\", val);\n        }}\n      />\n    </div>\n    <div>\n      <label htmlFor=\"tilesHigh\">Tiles High </label>\n      <br />\n      <NumericInput\n        id=\"tilesHigh\"\n        value={tilesHigh}\n        min={1}\n        max={32}\n        onChange={val => {\n          handleChange(\"tilesHigh\", val);\n        }}\n      />\n    </div>\n    <div>\n      <label htmlFor=\"scale\">Scale </label>\n      <br />\n      <NumericInput\n        id=\"scale\"\n        value={scale}\n        step={0.1}\n        precision={1}\n        min={1}\n        max={5}\n        onChange={val => {\n          handleChange(\"scale\", val);\n        }}\n      />\n    </div>\n  </div>\n);\n\nexport default Settings;\n","import { connect } from \"react-redux\";\nimport { setTilesWide, setTilesHigh, setScale } from \"../actions\";\nimport Settings from \"../presenters/Settings.jsx\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    scale: state.settings.scale,\n    tilesHigh: state.settings.tilesHigh,\n    tilesWide: state.settings.tilesWide\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    handleChange: (event, value) => {\n      switch (event) {\n        case \"scale\":\n          return dispatch(setScale(value));\n        case \"tilesHigh\":\n          return dispatch(setTilesHigh(value));\n        case \"tilesWide\":\n          return dispatch(setTilesWide(value));\n        default:\n          return;\n      }\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Settings);\n","export const loadTexture = (image) => ({\n  type: 'LOAD_TEXTURE',\n  image,\n});\n\nexport const loadMap = (map) => ({\n  type: 'LOAD_MAP',\n  map,\n});\n\nexport const applyStyle = (key, style) => ({\n  type: 'APPLY_STYLE',\n  key,\n  style,\n});\n\nexport const setTilesWide = (value) => ({\n  type: 'SET_TILES_WIDE',\n  value,\n});\n\nexport const setTilesHigh = (value) => ({\n  type: 'SET_TILES_HIGH',\n  value,\n});\n\nexport const setScale = (value) => ({\n  type: 'SET_SCALE',\n  value,\n});\n","export const getImage = (dataUri) => {\n  return new Promise((resolve, reject) => {\n    if (/^data:image/.test(dataUri)) {\n      const img = new Image();\n      img.onload = () => {\n        resolve(img);\n      };\n      img.src = dataUri;\n    } else {\n      reject('Not a valid image file.');\n    }\n  });\n}\n\nexport const loadImageFile = (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onload = function (event) {\n      getImage(event.target.result).then((image) => {\n        resolve({\n          name: file.name,\n          dataUri: event.target.result,\n          width: image.width,\n          height: image.height,\n        });\n      }).catch((reason) => {\n        reject(reason);\n      })\n    };\n    reader.readAsDataURL(file);\n  })\n}\n\n\n\nexport const cropImage = (dataUri, x, y, width, height) => {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const context = canvas.getContext('2d');\n  return getImage(dataUri).then((img) => {\n    context.drawImage(img,\n      x, y, width, height,\n      0, 0, width, height);\n    return canvas.toDataURL();\n  });\n}\n\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nexport const FileLoader = ({ dropHandler, text }) => (\n  <Dropzone onDrop={dropHandler.bind(this)}>\n    {({ getRootProps, getInputProps }) => (\n      <section>\n        <div style={{ border: \"1px dashed black\" }} {...getRootProps()}>\n          <input {...getInputProps()} />\n          <p style={{ margin: 0, padding: \"10px\" }}>{text}</p>\n        </div>\n      </section>\n    )}\n  </Dropzone>\n);\n\nexport default FileLoader;\n","import { connect } from \"react-redux\";\nimport { loadTexture } from \"../actions\";\nimport { loadImageFile } from \"../core/image.js\";\nimport FileLoader from \"../presenters/FileLoader.jsx\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    text: \"Load Texture\",\n    texture: state.texture\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    dropHandler: files => {\n      loadImageFile(files[0])\n        .then(image => {\n          dispatch(loadTexture(image));\n        })\n        .catch(reason => {\n          alert(reason);\n        });\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FileLoader);\n","import React from \"react\";\n\nexport const Grid = ({ components }) => {\n  let rows = [];\n  let curRow = [];\n  for (let y = 0; y < components[0].length; y++) {\n    for (let x = 0; x < components.length; x++) {\n      curRow.push(components[x][y]);\n    }\n    rows.push(<tr key={y}>{curRow}</tr>);\n    curRow = [];\n  }\n\n  return (\n    <table>\n      <tbody>{rows}</tbody>\n    </table>\n  );\n};\n\nexport default Grid;\n","export const range = (size, val) => {\n  return Array(size).fill(val);\n}\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nexport function parseJson(obj, msg) {\n  try {\n    return JSON.parse(obj);\n  } catch (e) {\n    throw Error(msg)\n  }\n}","import React, { Component } from \"react\";\nimport Grid from \"../Grid\";\nimport { range } from \"../../core/utils.js\";\nimport { cropImage } from \"../../core/image.js\";\n\nclass TextureGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: [[]]\n    };\n  }\n\n  generateImages({ texture, tilesWide, tilesHigh }) {\n    let { dataUri, width, height } = texture;\n    const imageWidth = width / tilesWide;\n    const imageHeight = height / tilesHigh;\n\n    const promises = range(tilesWide).map((row, x) =>\n      Promise.all(\n        range(tilesHigh).map((col, y) => {\n          const cx = x * imageWidth;\n          const cy = y * imageHeight;\n          return cropImage(dataUri, cx, cy, imageWidth, imageHeight).then(\n            croppedImage => {\n              return croppedImage;\n            }\n          );\n        })\n      )\n    );\n\n    Promise.all(promises).then(images => {\n      this.setState({\n        images\n      });\n    });\n  }\n\n  handleDrag(image, key, ev) {\n    ev.dataTransfer.setData(\n      \"style\",\n      JSON.stringify({\n        image,\n        key\n      })\n    );\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.generateImages(nextProps);\n  }\n\n  componentWillMount() {\n    this.generateImages(this.props);\n  }\n\n  render() {\n    const { tilesHigh, tileWidth, tileHeight } = this.props;\n\n    const components = this.state.images.map((imageRow, x) =>\n      imageRow.map((image, y) => {\n        const key = y * tilesHigh + x;\n        return (\n          <td key={key}>\n            <img\n              onDragStart={this.handleDrag.bind(this, image, key)}\n              src={image}\n              alt={`${key}-${x}-${y}`}\n              style={{\n                width: tileWidth,\n                height: tileHeight\n              }}\n            />\n          </td>\n        );\n      })\n    );\n    return <Grid components={components} />;\n  }\n}\n\nexport default TextureGrid;\n","import { createSelector } from 'reselect';\n\nconst settingsSelector = state => state.settings;\n\nexport const getSizes = createSelector(\n  settingsSelector,\n  ({ width, height, tilesWide, tilesHigh, scale }) => ({\n    tileWidth: Math.floor(width / tilesWide * scale),\n    tileHeight: Math.floor(height / tilesHigh * scale),\n  })\n);\n","import { connect } from \"react-redux\";\nimport TextureGrid from \"../presenters/Texture/TextureGrid.jsx\";\nimport { getSizes } from \"../selectors\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    texture: state.texture,\n    ...getSizes(state),\n    ...state.settings\n  };\n};\n\nexport default connect(mapStateToProps)(TextureGrid);\n","import React from 'react';\nimport MapLoadContainer from '../../containers/TextureLoadContainer'\nimport MapGridContainer from '../../containers/TextureGridContainer'\n\nexport const TextureSelect = ({\n  textureLoaded,\n}) => (\n  <div>\n    {\n      textureLoaded ?\n        <MapGridContainer />:\n        <MapLoadContainer /> \n    }\n  </div>\n);\n\nexport default TextureSelect;\n","import { connect } from 'react-redux';\nimport TextureSelect from '../presenters/Texture/TextureSelect'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    textureLoaded: state.application.textureLoaded,\n  }\n}\n\nexport default connect(mapStateToProps)(TextureSelect);\n","import { isArray, parseJson } from './utils';\n\nexport const loadMapFile = (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onload = function (event) {\n      try {\n        const map = parseJson(event.target.result,\n          \"Not a valid JSON file.\");\n        if (typeof map !== 'undefined'\n          && isArray(map.data)\n          && isArray(map.data[0])) {\n          resolve(map);\n        } else {\n          throw Error('JSON detected, however the format must be { data: [[]] }.');\n        }\n      } catch (e) {\n        reject(e.message);\n      }\n    };\n    reader.readAsText(file);\n  })\n}\n","import { connect } from \"react-redux\";\nimport { loadMap } from \"../actions\";\nimport { loadMapFile } from \"../core/map.js\";\nimport FileLoader from \"../presenters/FileLoader.jsx\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    text: \"Load Map\",\n    texture: state.texture,\n    overlay: state.textureOverlay\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    dropHandler: files => {\n      loadMapFile(files[0])\n        .then(map => {\n          dispatch(loadMap(map.data));\n        })\n        .catch(reason => {\n          alert(reason);\n        });\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FileLoader);\n","import React from \"react\";\n\nconst Tile = ({ value, textureMap, tileHeight, tileWidth }) => {\n  if (typeof textureMap[value] === \"undefined\") {\n    return (\n      <span\n        style={{\n          pointerEvents: \"none\",\n          fontSize: `${tileWidth / 2}px`\n        }}\n      >\n        {value}\n      </span>\n    );\n  } else {\n    const { image } = textureMap[value];\n    return (\n      <img\n        src={image}\n        role=\"presentation\"\n        style={{\n          pointerEvents: \"none\",\n          width: \"100%\",\n          height: \"100%\"\n        }}\n      />\n    );\n  }\n};\n\nexport default Tile;\n","import React from \"react\";\nimport Tile from \"./Tile\";\nimport Grid from \"../Grid\";\nimport \"./Map.css\";\n\nexport const Map = props => {\n  const handleDrop = function(value, ev) {\n    const data = JSON.parse(ev.dataTransfer.getData(\"style\"));\n    props.applyStyle(value, data);\n  };\n\n  const { tileWidth, tileHeight } = props;\n\n  const tileComponents = props.tiles.map((row, idx) =>\n    row.map((tile, tdx) => (\n      <td\n        key={tdx + idx * row.length}\n        onDrop={handleDrop.bind(this, tile)}\n        onDragOver={e => {\n          e.preventDefault();\n        }}\n        onDragEnter={e => {\n          e.preventDefault();\n        }}\n        onDragLeave={e => {\n          e.preventDefault();\n        }}\n        style={{\n          width: tileWidth,\n          height: tileHeight,\n          minWidth: tileWidth,\n          minHeight: tileHeight\n        }}\n      >\n        <Tile {...props} value={tile} />\n      </td>\n    ))\n  );\n\n  return (\n    <div className=\"Map\">\n      <Grid components={tileComponents} />\n    </div>\n  );\n};\n\nexport default Map;\n","import { connect } from \"react-redux\";\nimport { applyStyle } from \"../actions\";\nimport MapGrid from \"../presenters/Map/MapGrid.jsx\";\nimport { getSizes } from \"../selectors\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    tiles: state.map,\n    textureMap: state.textureMap,\n    ...getSizes(state),\n    ...state.settings\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    applyStyle: (key, style) => {\n      dispatch(applyStyle(key, style));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MapGrid);\n","import React from \"react\";\nimport MapLoadContainer from \"../../containers/MapLoadContainer\";\nimport MapGridContainer from \"../../containers/MapGridContainer\";\n\nexport const MapSelect = ({ mapLoaded }) => (\n  <div>{mapLoaded ? <MapGridContainer /> : <MapLoadContainer />}</div>\n);\n\nexport default MapSelect;\n","import { connect } from \"react-redux\";\nimport MapSelect from \"../presenters/Map/MapSelect\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    mapLoaded: state.application.mapLoaded\n  };\n};\n\nexport default connect(mapStateToProps)(MapSelect);\n","import React, { Component } from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport class TextureMap extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          overflowWrap: \"break-word\"\n        }}\n      >\n        <SyntaxHighlighter language=\"json\" style={docco}>\n          {JSON.stringify(this.props.textureMap, null, 2)}\n        </SyntaxHighlighter>\n      </div>\n    );\n  }\n}\n\nexport default TextureMap;\n","import { connect } from \"react-redux\";\nimport TextureMap from \"../presenters/TextureMap\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    textureMap: state.textureMap\n  };\n};\n\nexport default connect(mapStateToProps)(TextureMap);\n","import React, { Component } from 'react';\nimport SettingsContainer from './containers/SettingsContainer'\nimport TextureSelectContainer from './containers/TextureSelectContainer'\nimport MapSelectContainer from './containers/MapSelectContainer'\nimport TextureMapContainer from './containers/TextureMapContainer'\nimport './simple-grid.min.css';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <h3> Tile Mapper </h3>\n            <div className=\"flex-display\">\n              <MapSelectContainer />\n              <TextureSelectContainer />\n            </div>\n            <TextureMapContainer />\n          </div>\n          <div className=\"col-4\">\n            <form>\n              <h5> Settings </h5>\n              <hr />\n              <SettingsContainer />\n            </form>\n          </div>\n        </div>\n      </div>\n      // <div className=\"wrapper\">\n      //   <div className=\"left-container\">\n      //     <MapSelectContainer />\n      //     <TextureSelectContainer />\n      //     <TextureMapContainer />\n      //   </div>\n      //   <div className=\"right-container\">\n      //     <b> Settings </b>\n      //     <hr />\n      //     <SettingsContainer />\n      //   </div>\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux'; \nimport roguelikeApp from './reducers'; \nimport App from './App';\nimport './index.css';\n\n\nlet store = createStore(roguelikeApp,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}